{"version":3,"file":"static/js/860.68c82bb3.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/modules/MovieSearchForm/MovieSearchForm.module.css?0082","modules/MovieSearchForm/MovieSearchForm.jsx","webpack://goit-react-hw-05-movies/./src/modules/SearchMovieList/SearchMovieList.module.css?3a23","modules/SearchMovieList/SearchMovieList.jsx","modules/MovieSearchBar/MovieSearchBar.js","pages/MoviesPage/MoviesPage.js","shared/services/theMovieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearchForm_form__fvck1\",\"input\":\"MovieSearchForm_input__3-RcW\",\"btn\":\"MovieSearchForm_btn__Qnmnu\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './MovieSearchForm.module.css';\n\nexport default function MovieSearchForm({ formSubmitQuery }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    formSubmitQuery(query);\n    setQuery('');\n  };\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        <input\n          placeholder=\"Please type text...\"\n          className={s.input}\n          name=\"search\"\n          value={query}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <button className={s.btn} type=\"submit\">\n        search\n      </button>\n    </form>\n  );\n}\n\nMovieSearchForm.propTypes = {\n  formSubmitQuery: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SearchMovieList_item__RDqUQ\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './SearchMovieList.module.css';\n\nexport default function SearchMovieList({ movies }) {\n  const elements = movies.map(({ title, id }) => {\n    return (\n      <li className={s.item} key={id}>\n        <Link to={`/movies/${id}`}>{title}</Link>\n      </li>\n    );\n  });\n\n  return <ul className={s.list}>{elements}</ul>;\n}\n\nSearchMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'shared/services/theMovieAPI';\n\nimport MovieSearchForm from '../MovieSearchForm/MovieSearchForm';\nimport SearchMovieList from '../SearchMovieList/SearchMovieList';\nimport { Loader } from 'components';\n\nexport default function MovieSearchBar() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMoviesBySearch = async () => {\n      setLoading(true);\n      try {\n        const data = await getMoviesBySearch(query);\n\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (query) {\n      fetchMoviesBySearch();\n    }\n  }, [query]);\n\n  const handleFormSubmit = searchValue => {\n    if (!searchValue) {\n      alert('Please type text');\n      return;\n    }\n    setSearchParams({ query: searchValue });\n  };\n  return (\n    <div>\n      {error && <p>Movies not found.</p>}\n      <MovieSearchForm formSubmitQuery={handleFormSubmit} />\n      {loading && <Loader />}\n\n      {movies.length > 0 && <SearchMovieList movies={movies} />}\n    </div>\n  );\n}\n","import MovieSearchBar from '../../modules/MovieSearchBar/MovieSearchBar';\n\nexport default function MoviesPage() {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <main>\n          <h2>Search movie</h2>\n          <MovieSearchBar />\n        </main>\n      </div>\n    </section>\n  );\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '34dbf9d1a3fd74b10bf7ab9eec59866f',\n    language: 'en-US',\n  },\n});\n\nexport const getPopularMovies = async () => {\n  const { data } = await instance('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await instance(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance(`/movie/${movieId}/reviews`);\n  return data.results;\n};\nexport const getMoviesBySearch = async (query, page = 1) => {\n  const { data } = await instance('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["MovieSearchForm","formSubmitQuery","useState","query","setQuery","className","s","onSubmit","event","preventDefault","placeholder","name","value","onChange","target","type","SearchMovieList","elements","movies","map","title","id","to","MovieSearchBar","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMoviesBySearch","getMoviesBySearch","data","message","searchValue","alert","length","MoviesPage","instance","axios","baseURL","params","api_key","language","getPopularMovies","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","page"],"sourceRoot":""}