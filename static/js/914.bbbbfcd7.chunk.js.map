{"version":3,"file":"static/js/914.bbbbfcd7.chunk.js","mappings":"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","sources":["webpack://react-movies-list/./src/modules/Container/Container.module.css?852e","modules/Container/Container.jsx","webpack://react-movies-list/./src/modules/MovieSearchForm/MovieSearchForm.module.css?0082","modules/MovieSearchForm/MovieSearchForm.jsx","webpack://react-movies-list/./src/modules/SearchMovieList/SearchMovieList.module.css?3a23","modules/SearchMovieList/SearchMovieList.jsx","modules/MovieSearchBar/MovieSearchBar.js","webpack://react-movies-list/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.js","shared/services/theMovieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__twi-x\"};","import s from '../Container/Container.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearchForm_form__fvck1\",\"label\":\"MovieSearchForm_label__+eBBL\",\"input\":\"MovieSearchForm_input__3-RcW\",\"btn\":\"MovieSearchForm_btn__Qnmnu\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './MovieSearchForm.module.css';\n\nexport default function MovieSearchForm({ formSubmitQuery }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    formSubmitQuery(query);\n    setQuery('');\n  };\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <input\n          placeholder=\"Please type text...\"\n          className={s.input}\n          name=\"search\"\n          value={query}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n\nMovieSearchForm.propTypes = {\n  formSubmitQuery: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SearchMovieList_list__7VnNz\",\"item\":\"SearchMovieList_item__RDqUQ\",\"text\":\"SearchMovieList_text__z-ppq\",\"img\":\"SearchMovieList_img__kD83A\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './SearchMovieList.module.css';\n\nexport default function SearchMovieList({ movies }) {\n  const elements = movies.map(({ title, id, poster_path }) => {\n    return (\n      <li className={s.item} key={id}>\n        <Link className={s.text} to={`/movies/${id}`}>\n          <img\n            className={s.img}\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt=\"poster for movie\"\n          ></img>\n\n          {title}\n        </Link>\n      </li>\n    );\n  });\n\n  return <ul className={s.list}>{elements}</ul>;\n}\n\nSearchMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'shared/services/theMovieAPI';\n\nimport MovieSearchForm from '../MovieSearchForm/MovieSearchForm';\nimport SearchMovieList from '../SearchMovieList/SearchMovieList';\nimport { Loader } from 'components';\n\nexport default function MovieSearchBar() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMoviesBySearch = async () => {\n      setLoading(true);\n      try {\n        const data = await getMoviesBySearch(query);\n\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (query) {\n      fetchMoviesBySearch();\n    }\n  }, [query]);\n\n  const handleFormSubmit = searchValue => {\n    if (!searchValue) {\n      alert('Please type text');\n      return;\n    }\n    setSearchParams({ query: searchValue });\n  };\n  return (\n    <>\n      {error && <p>Movies not found.</p>}\n\n      <MovieSearchForm formSubmitQuery={handleFormSubmit} />\n\n      {loading && <Loader />}\n\n      {movies.length > 0 && <SearchMovieList movies={movies} />}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MoviesPage_title__Coe7O\"};","import Container from 'modules/Container/Container';\nimport MovieSearchBar from '../../modules/MovieSearchBar/MovieSearchBar';\nimport s from '../MoviesPage/MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  return (\n    <section className=\"section\">\n      <Container>\n        <h2 className={s.title}>Search movie</h2>\n        <MovieSearchBar />\n      </Container>\n    </section>\n  );\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '34dbf9d1a3fd74b10bf7ab9eec59866f',\n    language: 'en-US',\n  },\n});\n\nexport const getPopularMovies = async () => {\n  const { data } = await instance('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await instance(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance(`/movie/${movieId}/reviews`);\n  return data.results;\n};\nexport const getMoviesBySearch = async (query, page = 1) => {\n  const { data } = await instance('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["Container","children","className","s","MovieSearchForm","formSubmitQuery","useState","query","setQuery","onSubmit","event","preventDefault","placeholder","name","value","onChange","target","type","SearchMovieList","elements","movies","map","title","id","poster_path","to","src","alt","MovieSearchBar","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMoviesBySearch","getMoviesBySearch","data","message","searchValue","alert","length","MoviesPage","instance","axios","baseURL","params","api_key","language","getPopularMovies","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","page"],"sourceRoot":""}